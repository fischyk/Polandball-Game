<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// generator settings
globalvar gGain, gGrid, gPixel, gFunction, gParam1, gParam2, gOutline, gOutlineC, gPallete, gIterations, gMirror;
texture_set_interpolation(0);
randomize();

gGain = 1;
gGrid = 18;
gPixel = 4; 
gFunction = 2;
gParam1 = 0;
gParam2 = 1;
gPallete = 6;
gIterations = 3;
gMirror = 2;
gOutlineC = $010101;
gOutline = true;

functionName[0] = "Holes";
functionName[1] = "Sinus";
functionName[2] = "Sphere";

mirrorName[0] = "No mirror";
mirrorName[1] = "Horizontal";
mirrorName[2] = "Vertical";
mirrorName[3] = "Quad";

infoKeys = "Use: Q, W to change Gain,
M to change function mode, O to switch outline,
up/down to change first function parameter,
left/right to change second function parameter,
I to change pixel clearing iterations
M to change mirror mode";

info[0] = "Hole mode takes 1 parameter. Param1 changes propability to erease random pixel";
info[1] = "Sinus mode takes 2 parameters. Param1 changes sinus angle, param2 changes scale";
info[2] = "Sphere mode takes 1 parameter. Param1 changes scale";


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// gain change  ( key Q and W )
if ( keyboard_check_pressed(ord('Q')) ) { gGain = max(0, gGain-0.1); }
if ( keyboard_check_pressed(ord('W')) ) { gGain = min(1, gGain+0.1); }


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// function param1 change  (vk Up/down)
if ( keyboard_check_pressed(vk_down) ) { gParam1 -= 2; }
if ( keyboard_check_pressed(vk_up) ) { gParam1 += 2; }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// function param2 change  (vk left/right)
if ( keyboard_check_pressed(vk_right) ) { gParam2 += 2; }
if ( keyboard_check_pressed(vk_left) ) { gParam2 -= 2; }

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Switch function ( key F )
if ( keyboard_check_pressed(ord('F') ) ) { gFunction = (gFunction +1) mod 3; }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// switch iterations (key I)
if ( keyboard_check_pressed(ord('I')) ) gIterations = ( gIterations + 1 ) mod 4;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// switch iterations (key M)
if ( keyboard_check_pressed(ord('M')) ) gMirror = ( gMirror + 1 ) mod 4;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// switch iterations (key M)
if ( keyboard_check_pressed(ord('O')) ) gOutline = !gOutline;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draw gui
scale = 20;
draw_sprite_ext(sPalettes, gPallete, 512-(sprite_get_width(sPalettes)*scale)*0.5, 64, scale, scale, 0, -1, 1);
draw_rectangle_colour(494, 90, 528, 90+16, gOutline, gOutline, gOutline, gOutline, 0);
draw_set_color(c_yellow);

draw_text(10, 10, "Grid size:" 
                +"#Pixel size:" 
                +"#Sprite size:" 
                +"#Function type:"
                +"#Function param1:"
                +"#Function param2:"
                +"#Noise gain:" 
                +"#Pixel clearing iterations:"  
                +"#Mirror mode:"  
                +"#Outline:"           
                );

draw_set_halign(fa_center);
draw_text(512, 10, "Press Space to Generate new set of sprites# Press Enter to change palette" );

draw_set_halign(fa_left);
draw_set_color(c_orange);
draw_text(235, 10, string(gGrid)
                +"#"+ string(gPixel)
                +"#"+ string(gPixel*gGrid)
                +"#"+ string(functionName[gFunction])
                +"#"+ string(gParam1)
                +"#"+ string(gParam2)
                +"#"+ string(gGain)
                +"#"+ string(gIterations)
                +"#"+ mirrorName[gMirror]
                +"#"+ string(gOutline)                
                );

draw_set_color(c_gray);                
draw_text(10, 576, infoKeys + "##" + info[gFunction]);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// set new palette
gPallete = (gPallete + 1) mod sprite_get_number(sPalettes);
with (oCreature) event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
