<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>enemy_8ball</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initial
jump_timer = 2
dir = -1;
movespad = 2;
gravi = 0.5;
hsp = 0;
vsp = 0;
jumpspeed = 8;
tick = 20
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stuff
if jump_timer &gt; 0 {
hsp = dir * movespad;

}
jump_timer -= 1;
if (jump_timer = 0)
{
    if place_meeting(x,y+16, obj_wall) {
    vsp = -jumpspeed;
    }
    hsp = 0 ;
    vsp += gravi;
    jump_timer = 20;
}

vsp += gravi;
//Horizontal Collision
if (place_meeting(x+hsp,y, obj_wall))
{
    while(!place_meeting(x+sign(hsp),y,obj_wall))
    {
    x += sign(hsp)
    }
    hsp = 0;
    
    dir *= -1;
}

x += hsp;
//Vertical Collision
if (place_meeting(x,y+vsp, obj_wall))
{
while (!place_meeting(x,y+sign(vsp),obj_wall))
    {
    y += sign(vsp)
    }
    vsp = 0;
}
y += vsp;

//Enemy collision
if (place_meeting(x,y,obj_player))
{
    if (obj_player.x &lt; x-16)
    {
        with (obj_player) hsp = -jumpspeed;
        instance_destroy();
    }
    if (obj_player.x &lt; x+16)
    {
        with (obj_player) hsp = jumpspeed;
        instance_destroy();
    }
    else
    {
        with (obj_player) health -= 1;
    }

}
if place_meeting(x+vsp,y,obj_wall)
{
    dir *= -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
